services:
  server:
    image: uptimealert
    build: .
    container_name: uptimealert-server
    command: gunicorn -w 2 -b 0.0.0.0 'app:create_app()'
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres

  worker:
    image: uptimealert
    build: .
    command: celery -A init_celery worker --concurrency=2 --loglevel INFO
    container_name: uptimealert-worker
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  beat:
    image: uptimealert
    build: .
    command: celery -A init_celery beat --concurrency=2 --loglevel INFO
    container_name: uptimealert-beat
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - worker
      - redis
      - postgres

  redis:
    image: redis:7.2-alpine
    container_name: uptimealert-redis
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning --requirepass donotuseinproductionxd
    volumes:
        - './data/redis/:/data'

  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    container_name: uptimealert-postgres
    environment:
      - POSTGRES_DB=uptimealert
      - POSTGRES_USER=uptimealert_user
      - POSTGRES_PASSWORD=donotuseinproductionxd
    volumes:
      - './data/postgres/:/var/lib/postgresql/data'
